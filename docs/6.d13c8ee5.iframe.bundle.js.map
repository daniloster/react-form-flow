{"version":3,"sources":["webpack:///./node_modules/@storybook/components/dist/esm/ScrollArea/OverlayScrollbars.js","webpack:///./node_modules/@storybook/components/node_modules/core-js/modules/es.regexp.constructor.js","webpack:///./node_modules/overlayscrollbars/js/OverlayScrollbars.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","OverlayScrollbarsComponent","_ref","_ref$options","options","extensions","className","children","rest","osTargetRef","useRef","osInstance","useEffect","current","mergeHostClassNames","valid","destroy","createElement","ref","host","getElements","regex","RegExp","concat","replace","osClassNames","split","filter","name","match","join","displayName","DESCRIPTORS","global","isForced","inheritIfRequired","createNonEnumerableProperty","defineProperty","f","getOwnPropertyNames","isRegExp","toString","getFlags","stickyHelpers","redefine","fails","has","enforceInternalState","enforce","setSpecies","wellKnownSymbol","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","MATCH","NativeRegExp","RegExpPrototype","IS_NCG","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","BASE_FORCED","RegExpWrapper","pattern","flags","rawFlags","dotAll","sticky","handled","result","state","thisIsRegExp","patternIsRegExp","flagsAreUndefined","undefined","groups","rawPattern","constructor","string","chr","index","named","names","brackets","ncg","groupid","groupname","charAt","test","slice","SyntaxError","push","handleNCG","raw","handleDotAll","error","proxy","configurable","get","set","it","window","document","_targets","_instancePropertyString","_easingsMath","PLUGINNAME","TYPES","o","a","s","b","n","u","z","LEXICON","c","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","toUpperCase","_cssPrefixes","_jsPrefixes","_cssProperty","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","fNOP","fBound","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","strPage","strClient","strX","strY","eventDoc","originalEvent","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","MATH","Math","JQUERY","jQuery","EASING","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","hasOwnConstructor","hasIsPrototypeOf","each","callback","isArrayLike","stripAndCollapse","value","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","nextAnim","q","splice","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","elms","base","elements","innerHTML","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","classList","classNamePrepared","contains","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","overflowBehaviorAllowedValues","optionsDefaultsAndTemplate","convert","_pluginsExtensions","_pluginsOptions","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","_defaults","template","recursive","valType","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","elementName","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observe","dir","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","textareaUpdate","mutation","doUpdateForce","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","hostClassNamesChanged","updateViewportAttrsFromTarget","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSizeChanged","bodyMinSize","oldClassNames","newClassNames","currClasses","diff","getArrayDifferences","idx","mutationType","strClosest","float","bodyMinSizeC","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","sizeIsAffected","checkPropertyName","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorIsLastPosition","_cursorPosition","_cursorMax","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","setupScrollbarEvents","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollDelta","isFinite","documentMouseTouchUp","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","getCSSTransitionString","isTrack","element2","_l_t","setupScrollbarCornerEvents","reconnectMutationObserver","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","regExpValidate","properties","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","doAdd","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","factory"],"mappings":"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ACAC,qBACAC,gBACAC,iBACAC,gBACAC,uBACAC,oBACAC,sBACAC,wBACAC,4BACAC,iCACAC,kCACAC,0BACAC,+BACAC,gCACAC,qBACAC,uBACAC,qBACAC,mBACAC,+BACAC,2BACAC,sBACAC,uBACAC,sBAGAC,eACAC,wBACAC,yBACAC,kBACAC,mBACAC,gBACAC,iBACAC,mBACAC,iBACAC,gBACAC,gBACAC,mBACAC,2BACAC,sBACAC,iBACAC,sBACAC,uBACAC,qBACAC,mCACAC,iBACAC,sBACAC,6CACAC,oCACAC,2BACAC,yBACAC,+BACAC,8BACAC,aACAC,mBACAC,gBACAC,cACAC,2BACAC,mBACAC,mBACAC,wBACAC,uBACAC,kBAIAC,sBACAC,yBACAC,8BACAC,iCACAC,4BAQAC,kBAGAC,6BACAC,iCACAC,yBACAC,yBACAC,0BACAC,wBACAC,yBACAC,yBACAC,kCAGAC,YACAC,YACAC,kBACAC,gBArOAC,mBAAqB,GACrBC,sBAAwB,GACxBC,oBAAsB,GACtBC,cAAgB,GAChBC,wBAA0B,GAG1BC,gBAAkB,UAClBC,gBAAkB,UAClBC,iBAAmB,WACnBC,gBAAkB,UAClBC,QAAU,MACVC,UAAY,QACZC,WAAa,SACbC,SAAW,OACXC,aAAe,OACfC,aAAe,OACfC,UAAY,QACZC,WAAa,SACbC,UAAY,QACZhhB,UAAY,GACZihB,SAAW,OACXC,SAAW,OACXC,WAAa,SACbC,mBAAqB,OACrBC,MAAQ,IACRC,MAAQ,IACRC,QAAU,IACVxhB,UAAY,IACZyhB,cAAgB,YAChBC,oBAAsB,cACtBC,kBAAoB,YACpBzhB,eAAiBkhB,WAAa,OAC9BjhB,cAAgBihB,WAAa,MAC7BQ,wBAA0B,uBAC1BC,sBAAwB,+BACxBC,wBAA0B,sBAC1BC,eAAiB,aACjBC,eAAiB,aACjBC,iBAAmB,UACnBC,eAAiB,QACjBC,qBAAuB,cACvBC,uBAAyB,mDACzBC,2BAA6B,0BAG7BC,iBAAmB,MACnBC,sBAAwBD,iBAAmB,OAC3CE,sBAAwBF,iBAAmB,OAC3CG,6BAA+BD,sBAAwB,WACvDE,8BA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","file":"6.d13c8ee5.iframe.bundle.js","sourcesContent":["import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.assign.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\nexport var OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      extensions = _ref.extensions,\n      className = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = React.useRef();\n  var osInstance = React.useRef();\n  React.useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-padding\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\nOverlayScrollbarsComponent.displayName = \"OverlayScrollbarsComponent\";\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport default OverlayScrollbarsComponent;","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar enforceInternalState = require('../internals/internal-state').enforce;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\n// TODO: Use only propper RegExpIdentifierName\nvar IS_NCG = /^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar BASE_FORCED = DESCRIPTORS &&\n  (!CORRECT_NEW || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {\n    re2[MATCH] = false;\n    // RegExp constructor can alter flags and IsRegExp works correct with @@match\n    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n  }));\n\nvar handleDotAll = function (string) {\n  var length = string.length;\n  var index = 0;\n  var result = '';\n  var brackets = false;\n  var chr;\n  for (; index <= length; index++) {\n    chr = string.charAt(index);\n    if (chr === '\\\\') {\n      result += chr + string.charAt(++index);\n      continue;\n    }\n    if (!brackets && chr === '.') {\n      result += '[\\\\s\\\\S]';\n    } else {\n      if (chr === '[') {\n        brackets = true;\n      } else if (chr === ']') {\n        brackets = false;\n      } result += chr;\n    }\n  } return result;\n};\n\nvar handleNCG = function (string) {\n  var length = string.length;\n  var index = 0;\n  var result = '';\n  var named = [];\n  var names = {};\n  var brackets = false;\n  var ncg = false;\n  var groupid = 0;\n  var groupname = '';\n  var chr;\n  for (; index <= length; index++) {\n    chr = string.charAt(index);\n    if (chr === '\\\\') {\n      chr = chr + string.charAt(++index);\n    } else if (chr === ']') {\n      brackets = false;\n    } else if (!brackets) switch (true) {\n      case chr === '[':\n        brackets = true;\n        break;\n      case chr === '(':\n        if (IS_NCG.test(string.slice(index + 1))) {\n          index += 2;\n          ncg = true;\n        }\n        result += chr;\n        groupid++;\n        continue;\n      case chr === '>' && ncg:\n        if (groupname === '' || has(names, groupname)) {\n          throw new SyntaxError('Invalid capture group name');\n        }\n        names[groupname] = true;\n        named.push([groupname, groupid]);\n        ncg = false;\n        groupname = '';\n        continue;\n    }\n    if (ncg) groupname += chr;\n    else result += chr;\n  } return [result, named];\n};\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (isForced('RegExp', BASE_FORCED)) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var groups = [];\n    var rawPattern = pattern;\n    var rawFlags, dotAll, sticky, handled, result, state;\n\n    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {\n      return pattern;\n    }\n\n    if (patternIsRegExp || pattern instanceof RegExpWrapper) {\n      pattern = pattern.source;\n      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags.call(rawPattern);\n    }\n\n    pattern = pattern === undefined ? '' : toString(pattern);\n    flags = flags === undefined ? '' : toString(flags);\n    rawPattern = pattern;\n\n    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {\n      dotAll = !!flags && flags.indexOf('s') > -1;\n      if (dotAll) flags = flags.replace(/s/g, '');\n    }\n\n    rawFlags = flags;\n\n    if (UNSUPPORTED_Y && 'sticky' in re1) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    if (UNSUPPORTED_NCG) {\n      handled = handleNCG(pattern);\n      pattern = handled[0];\n      groups = handled[1];\n    }\n\n    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n\n    if (dotAll || sticky || groups.length) {\n      state = enforceInternalState(result);\n      if (dotAll) {\n        state.dotAll = true;\n        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);\n      }\n      if (sticky) state.sticky = true;\n      if (groups.length) state.groups = groups;\n    }\n\n    if (pattern !== rawPattern) try {\n      // fails in old engines, but we have no alternatives for unsupported regex syntax\n      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);\n    } catch (error) { /* empty */ }\n\n    return result;\n  };\n\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n\n  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {\n    proxy(keys[index++]);\n  }\n\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));"],"sourceRoot":""}