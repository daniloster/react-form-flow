{"version":3,"sources":["webpack:///./stories/withLayout.js","webpack:///./markdown/GETTING_STARTED.md","webpack:///./markdown/RECIPES_VALIDATIONS.md","webpack:///./markdown/RECIPES_CHECKBOX.md","webpack:///./markdown/RECIPES_DROPDOWN.md","webpack:///./markdown/RECIPES_INPUT.md","webpack:///./markdown/RECIPES_RADIO.md","webpack:///./react-form-flow-examples/AddressBook/ADDRESS_BOOK.md","webpack:///./stories/InputFieldRecipe.js","webpack:///./tools/helpers/components/hasValue.js","webpack:///./tools/helpers/components/createRequiredValidation.js","webpack:///./tools/helpers/components/createMinLengthValidation.js","webpack:///./tools/helpers/components/InputField.js","webpack:///./stories/App.js","webpack:///./stories/AppInteractive.js","webpack:///./react-form-flow-examples/AddressBook/schemaData.js","webpack:///./react-form-flow-examples/AddressBook/AddressBookForm.js","webpack:///./react-form-flow-examples/AddressBook/AddressBook.js","webpack:///./react-form-flow-examples/AddressBook/index.js","webpack:///./stories/RecipesValidations.js","webpack:///./stories/RecipesValidationsInteractive.js","webpack:///./react-form-flow-examples/fields/Radiofield.js","webpack:///./stories/RadioFieldRecipe.js","webpack:///./react-form-flow-examples/validationRecipes/hasValue.js","webpack:///./react-form-flow-examples/fields/CheckboxField.js","webpack:///./stories/CheckboxFieldRecipe.js","webpack:///./react-form-flow-examples/fields/DropdownField.js","webpack:///./stories/DropdownFieldRecipe.js","webpack:///./src/FormFlowDataContext.js","webpack:///./src/FormFlowValidationContext.js","webpack:///./src/validationUtils.js","webpack:///./src/useFormFlowValidation.js","webpack:///./src/hasPathMatched.js","webpack:///./src/hasChanged.js","webpack:///./src/shapes.js","webpack:///./src/FormFlowProvider.js","webpack:///./src/useFormFlowItem.js","webpack:///./src/useFormFlow.js","webpack:///./src/index.js","webpack:///./.storybook/config.js","webpack:///./react-form-flow-examples/fields/Validation.js","webpack:///./tools/helpers/components/Validation.js","webpack:///./react-form-flow-examples/validationRecipes/createRequiredValidation.js","webpack:///./stories/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./react-form-flow-examples/fields/InputField.js","webpack:///./react-form-flow-examples/validationRecipes/createMaxLengthValidation.js","webpack:///./react-form-flow-examples/validationRecipes/createRequiredListValidation.js","webpack:///./stories/FormFields.js","webpack:///./react-form-flow-examples/validationRecipes/createMinLengthValidation.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_storybook_addons__WEBPACK_IMPORTED_MODULE_1__","Layout","styled","div","withConfig","displayName","componentId","makeDecorator","name","wrapper","getStory","context","a","createElement","__webpack_exports__","InputFieldRecipeLayout","InputFieldRecipe","nameField","useFormFlowItem","react__WEBPACK_IMPORTED_MODULE_1___default","_react_form_flow_examples_fields_InputField__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","label","value","hasValue","trim","createRequiredValidation","message","_ref","data","path","key","concat","isValid","createMinLengthValidation","min","createMessage","args","length","InputFieldLayout","InputField","labelText","onChange","validations","id","useRef","uuid","v4","react_default","htmlFor","current","type","className","Validation","propTypes","PropTypes","string","func","isRequired","arrayOf","shape","oneOfType","number","defaultProps","Validations","nameValidation","useFormFlowValidation","descriptionValidation","extends_default","Form","descriptionField","App","schemaData","src","initialData","AppInteractive","requiredNameMessage","requiredDescriptionMessage","minNameLength","minDescriptionLength","useMemo","createValidations","_ref2","description","_ref3","d","createMaxLengthValidation","max","email","birthday","date","moment","now","valueOf","format","AddressBookFormLayout","AddressBookForm","emailField","birthdayField","layout","AddressBookLayout","AddressBook","initialState","UpdateData","setData","useEffect","ValidationsLayout","Object","keys","map","jsonPath","Fragment","isColored","filter","RecipesValidations","_ref4","decode","text","parser","document","innerHTML","textContent","RecipesValidationsInteractive","factories","newData","parse","JSON","getSchemaData","Function","RadioFieldLayout","RadioField","checkedValue","onChangeValue","useCallback","checked","bool","RadioFieldRecipeLayout","RadioFieldRecipe","handField","CheckboxFieldLayout","CheckboxField","treatedValue","newValue","includes","val","any","CheckboxFieldRecipeLayout","CheckboxFieldRecipe","skillsField","stringify","DropdownFieldLayout","DropdownField","empty","formatText","formatValue","options","e","optionValue","target","find","option","Boolean","oneOf","DropdownFieldRecipeLayout","countries","item","DropdownFieldRecipe","nationalityField","React","createContext","clearIndexes","replace","add","list","push","interpolatePaths","rawValidationPaths","paths","forEach","nestedPaths","split","reverse","parentPath","pop","derivatePaths","prefix","remainingPaths","get","suffix","_","idx","slice","invalidationPaths","_len","arguments","Array","_key","validate","checkValidation","undefined","_useContext","useContext","FormFlowDataContext","slicedToArray_default","_useContext3","FormFlowValidationContext","_useContext4","cache","allValidations","byPath","localCacheRef","previousValues","isAllValid","allPaths","some","validationPath","internalPath","hasPathMatched","dataToValidate","validationRules","indexesMatches","match","indexes","values","invalidationPath","reduce","finalPath","indexValue","index","hasChanged","currentValues","validation","SchemaDataShape","Validate","FormFlowProvider","children","dataState","useState","validationState","Provider","_useFormFlow","useFormFlow","_useContext2","onChangeByPath","oldData","set","node","objectOf","r","module","_storybook_react__WEBPACK_IMPORTED_MODULE_0__","_storybook_theming__WEBPACK_IMPORTED_MODULE_1__","_storybook_addon_console__WEBPACK_IMPORTED_MODULE_2__","addDecorator","storyFn","withConsole","setConsoleOptions","panelExclude","addParameters","theme","themes","light","configure","loadStories","require","styled_components__WEBPACK_IMPORTED_MODULE_1__","LabelFeedback","ValidationLayout","section","_ref2$isColored","_ref2$validations","_hasValue__WEBPACK_IMPORTED_MODULE_0__","_storybook_react__WEBPACK_IMPORTED_MODULE_1__","_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__","_withLayout__WEBPACK_IMPORTED_MODULE_3__","_docs_markdown_GETTING_STARTED_md__WEBPACK_IMPORTED_MODULE_4__","_docs_markdown_RECIPES_VALIDATIONS_md__WEBPACK_IMPORTED_MODULE_5__","_docs_markdown_RECIPES_CHECKBOX_md__WEBPACK_IMPORTED_MODULE_6__","_docs_markdown_RECIPES_DROPDOWN_md__WEBPACK_IMPORTED_MODULE_7__","_docs_markdown_RECIPES_INPUT_md__WEBPACK_IMPORTED_MODULE_8__","_docs_markdown_RECIPES_RADIO_md__WEBPACK_IMPORTED_MODULE_9__","_react_form_flow_examples_AddressBook_ADDRESS_BOOK_md__WEBPACK_IMPORTED_MODULE_10__","_AppInteractive__WEBPACK_IMPORTED_MODULE_11__","_RecipesValidationsInteractive__WEBPACK_IMPORTED_MODULE_12__","_FormFields__WEBPACK_IMPORTED_MODULE_13__","_CheckboxFieldRecipe__WEBPACK_IMPORTED_MODULE_14__","_DropdownFieldRecipe__WEBPACK_IMPORTED_MODULE_15__","_InputFieldRecipe__WEBPACK_IMPORTED_MODULE_16__","_RadioFieldRecipe__WEBPACK_IMPORTED_MODULE_17__","_react_form_flow_examples_AddressBook__WEBPACK_IMPORTED_MODULE_18__","storiesOf","withKnobs","withLayout","notes","markdown","getingStated","addressBook","recipesValidations","checkboxField","dropdownField","inputField","radioField","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","o","Error","code","webpackContextKeys","resolve","exports","props","_useState","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","isVisited","setIsVisited","onBlur","_Validation__WEBPACK_IMPORTED_MODULE_5__","createRequiredListValidation","FormFields","skills","hobbies","RecipesFieldsLayout","gender","visa","unit"],"mappings":"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A,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAA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","file":"main.547fe75ae221404dd4b2.bundle.js","sourcesContent":["import React from 'react';\nimport { makeDecorator } from '@storybook/addons';\nimport styled from 'styled-components';\n\nconst Layout = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default makeDecorator({\n  name: 'withLayout',\n  wrapper: (getStory, context) => <Layout>{getStory(context)}</Layout>,\n});\n","export default \"### How to use it\\n\\nDefine your form data wrapping with the container below.\\n\\n```html\\nimport FormFlowProvider from 'react-form-flow';\\n```\\n\\nUse hooks to get values, event handler and validations.\\n\\n```html\\nimport { useFormFlowItem, useFormFlowValidation } from 'react-form-flow';\\n```\\n\\n## Getting started\\n\\n`react-form-flow` as its name describes is a library to define a common and automated workflow to collect and validate form data. Allow user to consume the data and validation based on the json path.\\n\\nTo improve your productivity, it would be good to create your core form components such as input, dropdowns and on and on following the `react-form-flow` spec.\\n\\n_JSON PATH_ is a notation to navigate through the JSON object.\\n\\ne.g.\\n\\n```js\\nconst data = {\\n    person: {\\n      id: 1,\\n      name: 'Jane Doe',\\n      email: 'jane@doe.dead'\\n      children:[\\n        {id: 2, name: 'John Doe'}\\n      ]\\n    }\\n};\\n```\\n\\nSo, observing the json above, the json path to access the name of first child is `\\\"person.chidlren[0].name\\\"`.\\n\\n### Validation\\n\\n```jsx\\nimport React from 'react';\\n\\nexport default function Validation({ label, validations }) {\\n  return (\\n    <section>\\n      {!!label && <div>{label}</div>}\\n      {validations.map(({ key, isValid, message }) => !isValid && <div key={key}>{message}</div>)}\\n    </section>\\n  );\\n}\\n```\\n\\n### InputField\\n\\nThe input field could receive from the `useFormFlowItem` an object with the spec below.\\n\\n```js\\n{\\n  onChangeValue /* Function to update an object regarding the json path and value */,\\n  onChange /* Function to handle input event \\\"change\\\" */,\\n  setData /* Function to set the whole form data */,\\n  validations  /* arrayOf(Validation) */,\\n  value /* string */,\\n}\\n```\\n\\nComponent...\\n\\n```jsx\\nimport React from 'react';\\nimport Validation from './Validation';\\n\\n/**\\n * @typedef Validation\\n * @property {object} data\\n * @property {any} value\\n * @property {string} path\\n * @property {string} key\\n * @property {boolean} isValid\\n * @property {string|React.node} message\\n * */\\n\\nexport default function InputField({\\n  label,\\n  onChange,\\n  validations /* {array<Validation>} */,\\n  value,\\n}) {\\n  return (\\n    <div>\\n      <div>{label}</div>\\n      <input type=\\\"text\\\" onChange={onChange} value={value} />\\n      <div>\\n        <Validation validations={validations} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nInputField.defaultProps = {\\n  value: '',\\n};\\n```\\n\\n#### schemaData\\n\\n```jsx\\nimport { createValidations } from 'react-form-flow';\\n\\nfunction createRequiredValidation(message) {\\n  return ({ data, value, path }) => {\\n    const key = `${path}-required`;\\n    const isValid = hasValue(value);\\n\\n    return { data, value, path, key, isValid, message };\\n  };\\n}\\n\\nfunction createMinLengthValidation(min, createMessage) {\\n  return args => {\\n    const { data, value, path } = args;\\n    const key = `${path}-min-length`;\\n    const isValid = !hasValue(value) || value.length >= min;\\n    const { length } = value || '';\\n    const message = createMessage({ data, value, path, min, length });\\n\\n    return { data, value, path, key, isValid, message };\\n  };\\n}\\n\\nconst schemaData = {\\n  name: createValidations(\\n    [],\\n    createRequiredValidation('Name is required!'),\\n    createMinLengthValidation(\\n      5,\\n      ({ length, min }) =>\\n        `Name should have more than ${min} characters. (Remaining ${\\n          length > min ? 0 : min - length\\n        })`\\n    )\\n  ),\\n  description: createValidations(\\n    [],\\n    createRequiredValidation('Description is required!'),\\n    createMinLengthValidation(\\n      300,\\n      ({ length, min }) =>\\n        `Description should have more than ${min} characters. (Remaining ${\\n          length > min ? 0 : min - length\\n        })`\\n    )\\n  ),\\n};\\n```\\n\\n#### App\\n\\nA few things are required in order to use the `react-form-flow` library.\\n\\n- initialData: the initial data to be rendered in the form\\n- schemaData: an object with validation rules per json path\\n- children: the react node being wrapped by the provider containing the real form within fields\\n\\n```jsx\\nimport React from 'react';\\n// eslint-disable-next-line\\nimport styled from 'styled-components';\\nimport {\\n  createValidations,\\n  FormFlowProvider,\\n  useFormFlowItem,\\n  useFormFlowValidation,\\n} from 'react-form-flow';\\nimport Validation from './Validation';\\nimport InputField from './InputField';\\nimport schemaData from './schemaData';\\n\\nconst Layout = styled.div`\\n  height: 100%;\\n  width: 100%;\\n\\n  display: grid;\\n\\n  grid-template-columns: 1fr 1fr;\\n  grid-template-rows: auto;\\n`;\\n\\nfunction Validations() {\\n  const nameValidation = useFormFlowValidation('name');\\n  const descriptionValidation = useFormFlowItem('description');\\n\\n  return (\\n    <div>\\n      <Validation label=\\\"Name\\\" {...nameValidation} />\\n      <Validation label=\\\"Description\\\" {...descriptionValidation} />\\n    </div>\\n  );\\n}\\n\\nfunction Form() {\\n  const nameField = useFormFlowItem('name');\\n  const descriptionField = useFormFlowItem('description');\\n\\n  return (\\n    <div>\\n      <InputField label=\\\"Name\\\" {...nameField} />\\n      <InputField label=\\\"Description\\\" {...descriptionField} />\\n    </div>\\n  );\\n}\\n\\nfunction DemoApp() {\\n  return (\\n    <Layout>\\n      <FormFlowProvider initialData={{ name: '', description: '' }} schemaData={schemaData}>\\n        <Validations />\\n        <Form />\\n      </FormFlowProvider>\\n    </Layout>\\n  );\\n}\\n```\\n\\nRunning...\\n\\n```jsx\\n<DemoApp />\\n```\\n\"","export default \"# Recipes\\n\\nThe idea here is to show how to optimise your performance by reusing some strategies. For this, we are going to use factory methods to build validations.\\n\\n## Quick reminder\\n\\nThe `schemaData` object is built indexing validations by provided JSON PATH.\\n\\n## Factories\\n\\nFactory method is a creational pattern to deal with creation of objects in general. Its definition could be also expanded to creation of contracts.\\n\\nFollowing the examples below we are going to factory a required validation. So, these validations have the same type of check varying on the message, path and key returned.\\n\\n### Factoring required\\n\\nFactory a required validation pre-defining the key and path uniquely and allowing end consumer to define the message returned.\\n\\nThe return of the validation function must provide the interface below.\\n\\n```js\\n/**\\n * @typedef Validation\\n * @property {object} data\\n * @property {any} value\\n * @property {string} path\\n * @property {string} key\\n * @property {boolean} isValid\\n * @property {string|React.node} message\\n * */\\n```\\n\\n```jsx\\n/**\\n * Creates a function validation to be used in the schemaData object.\\n * @param {string} message is the text/React.node returned from the validation\\n *\\n * */\\nfunction createRequiredValidation(message) {\\n  return ({ data, value, path }) => {\\n    const key = `${path}-required`;\\n    const isValid = hasValue(value);\\n\\n    return { data, value, path, key, isValid, message };\\n  };\\n}\\n```\\n\\n### Factoring max length\\n\\nFor the max length validation, the constraint and the message needed to be provided by the end consumer in order to perform all checks and ensure a decent feedback. Ok, but, what if you need a dynamic message. Then, you can receive the message as function or component.\\n\\nIn the example below we are using `Message` as a component.\\n\\n```jsx\\nfunction MaxLengthMessage({ length, max }) {\\n  return `You have reached the limit of ${max}. (${length - max} character(s) beyond it)`;\\n}\\n```\\n\\n```jsx\\n/**\\n * Creates a function validation to be used in the schemaData object.\\n * */\\nfunction createMaxLengthValidation(max, Message) {\\n  return args => {\\n    const { data, value, path } = args;\\n    const key = `${path}-min-length`;\\n    const isValid = !hasValue(value) || value.length <= max;\\n    const { length } = value || '';\\n    const message = <Message length={length} max={max} />;\\n\\n    return { data, value, path, key, isValid, message };\\n  };\\n}\\n```\\n\\n### Using on schemaData\\n\\nTo create our schemaData we need to make use of the `createValidations`, this function will receive a list of fields that could invalidate cache for the validation (e.g. fields that validation depends on another field).\\n\\n```jsx\\nimport { createValidations } from 'react-form-flow';\\n\\nconst schemaData = {\\n  name: createValidations(\\n    [], // Invalidation Json Paths\\n    createRequiredValidation('Name is required!'),\\n    createMaxLengthValidation(50, MaxLengthMessage)\\n  ),\\n};\\n```\\n\\n### Multiple dependencies\\n\\nLets say you have a validation for range, but, this information is obtained from 2 fields which would have `min`, `max` constraints for the value and a list of acceptable units e.g. `['seconds', 'minutes', 'hours']`.\\n\\n```jsx\\nimport { createValidations } from 'react-form-flow';\\n\\nfunction MinMaxLengthMessage({ min, max, unit }) {\\n  return `Only values between ${min} and ${max} is allowed for ${unit}.`;\\n}\\n\\n/**\\n * Creates a function validation to be used in the schemaData object.\\n * */\\nfunction createMinMaxLengthValidation(mins, maxs, Message) {\\n  return args => {\\n    const { data, get, value, path } = args;\\n    const key = `${path}-min-max`;\\n    const unit = get('passport.visa.unit');\\n    const min = mins[unit];\\n    const max = maxs[unit];\\n    const isValid = !hasValue(value) || (value <= max && value >= min);\\n    const message = <Message min={min} max={max} unit={unit} />;\\n\\n    return { data, value, path, key, isValid, message };\\n  };\\n}\\n\\nconst mins = {\\n  seconds: 1,\\n  minutes: 1,\\n  hours: 1,\\n};\\n\\nconst maxs = {\\n  seconds: 60,\\n  minutes: 60,\\n  hours: 24,\\n};\\n\\nconst schemaData = {\\n  'passport.visa.value': createValidations(\\n    ['passport.visa.unit'], // Invalidation Json Paths\\n    createRequiredValidation('The visa must indicate how many days is allowed to stay.'),\\n    createMinMaxLengthValidation(mins, max, MinMaxLengthMessage)\\n  ),\\n  'passport.visa.unit': createValidations(\\n    [], // Invalidation Json Paths\\n    createRequiredValidation('Please select a unit to define how long the visa is valid.')\\n  ),\\n};\\n```\\n\\nBy doing this, every time that the `unit` is changed the validation for `value` is also computed.\\n\"","export default \"# Checkbox Field Recipe\\n\\nThis recipe will show how to build a group/simple checkbox using the `input[type=\\\"checkbox\\\"]` markup following the interface defined by `react-form-flow`.\\n\\n## Code\\n\\nHere, we are using [styled-components](https://www.styled-components.com/) for prettifying styles.\\n\\n### Validation\\n\\nYou will probably need a component to display the validations, see the draft below.\\n\\n```jsx\\nimport React from 'react';\\nimport styled from 'styled-components';\\n\\nconst ValidationLayout = styled.section`\\n  .ValidationLayout__message {\\n    color: red;\\n  }\\n`;\\n\\nexport default function Validation({ validations = [] }) {\\n  return (\\n    <ValidationLayout>\\n      {validations.map(\\n        ({ key, isValid, message }) =>\\n          !isValid && (\\n            <div className=\\\"ValidationLayout__message\\\" key={key}>\\n              {message}\\n            </div>\\n          )\\n      )}\\n    </ValidationLayout>\\n  );\\n}\\n```\\n\\n### CheckboxField\\n\\nHere, validations are received always and the consumer decides when to display them.\\n\\n**Note**: For this case, we are displaying the validations straightaway, but, nothing block you to pass some property to control as it will be displayed. e.g. `showValidation` when the form is submitted, then, it would be able to display by `{showValidation && <Validation validations={validations} />}`.\\n\\n```jsx\\nimport React, { useCallback, useRef, useState } from 'react';\\nimport PropTypes from 'prop-types';\\nimport uuid from 'uuid';\\nimport styled from 'styled-components';\\nimport Validation from './Validation';\\n\\nconst CheckboxFieldLayout = styled.div`\\n  padding: 0 0 10px 0;\\n  display: grid;\\n  grid-template-columns: min-content;\\n  grid-template-rows: min-content auto;\\n\\n  label {\\n    display: grid;\\n    grid-template-columns: min-content min-content;\\n    grid-template-rows: auto;\\n    white-space: nowrap;\\n    grid-gap: 10px;\\n  }\\n\\n  .CheckboxFieldLayout__validations {\\n    display: block;\\n    white-space: nowrap;\\n  }\\n`;\\n\\nexport default function CheckboxField({\\n  checkedValue,\\n  label: labelText,\\n  onChangeValue,\\n  validations,\\n  value,\\n}) {\\n  const id = useRef(uuid.v4());\\n  const onChange = useCallback(() => {\\n    const treatedValue = value || [];\\n    const hasValue = treatedValue.includes(checkedValue);\\n    const newValue = hasValue\\n      ? treatedValue.filter(val => val !== checkedValue)\\n      : treatedValue.concat(checkedValue);\\n\\n    onChangeValue(newValue);\\n  }, [checkedValue, onChangeValue, value]);\\n\\n  return (\\n    <CheckboxFieldLayout>\\n      <label htmlFor={id.current}>\\n        <span>{labelText}</span>\\n        <input\\n          id={id.current}\\n          type=\\\"checkbox\\\"\\n          onChange={onChange}\\n          checked={(value || []).includes(checkedValue)}\\n        />\\n      </label>\\n      <div className=\\\"CheckboxFieldLayout__validations\\\">\\n        <Validation validations={validations} />\\n      </div>\\n    </CheckboxFieldLayout>\\n  );\\n}\\n\\nCheckboxField.propTypes = {\\n  checkedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\\n    .isRequired,\\n  label: PropTypes.string,\\n  onChangeValue: PropTypes.func.isRequired,\\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\\n  value: PropTypes.oneOfType([\\n    PropTypes.string,\\n    PropTypes.number,\\n    PropTypes.bool,\\n    PropTypes.arrayOf(PropTypes.any),\\n  ]),\\n};\\n\\nCheckboxField.defaultProps = {\\n  label: null,\\n  validations: [],\\n  value: '',\\n};\\n```\\n\\n## Using the CheckboxField\\n\\nAfter building the Dropdown, see below how to use it.\\n\\n```jsx\\nimport React from 'react';\\nimport styled from 'styled-components';\\nimport { useFormFlowItem } from 'react-form-flow';\\nimport CheckboxField from './CheckboxField';\\n\\nconst CheckboxFieldRecipeLayout = styled.div``;\\n\\nexport default function CheckboxFieldRecipe() {\\n  const skillsField = useFormFlowItem('skills');\\n\\n  return (\\n    <CheckboxFieldRecipeLayout>\\n      <h2>Interact with the checkboxes below by clicking...</h2>\\n      <fieldset>\\n        <legend>Skills</legend>\\n        <CheckboxField {...skillsField} label=\\\"Reading\\\" checkedValue=\\\"reading\\\" />\\n        <CheckboxField {...skillsField} label=\\\"Strategic View\\\" checkedValue=\\\"strategic_view\\\" />\\n        <CheckboxField {...skillsField} label=\\\"Cooking\\\" checkedValue=\\\"cooking\\\" />\\n        <CheckboxField {...skillsField} label=\\\"Playing football\\\" checkedValue=\\\"football\\\" />\\n        <span>\\n          value:\\n          {JSON.stringify(skillsField.value)}\\n        </span>\\n      </fieldset>\\n    </CheckboxFieldRecipeLayout>\\n  );\\n}\\n```\\n\\nAnd then...\\n\\n```jsx\\n  import { FormFlowProvider } from 'react-form-flow';\\n\\n  const initialData = { ... };\\n  const schemaData = { ... };\\n\\n  // ...\\n\\n  <FormFlowProvider initialData={initialData} schemaData={schemaData}>\\n    <CheckboxFieldRecipe />\\n  </FormFlowProvider>\\n```\\n\"","export default \"# Dropdown Field Recipe\\n\\nThis recipe will show how to build a simple dropdown using the select markup following the interface defined by `react-form-flow`.\\n\\n## Code\\n\\nHere, we are using [styled-components](https://www.styled-components.com/) for prettifying styles.\\n\\n### Validation\\n\\nYou will probably need a component to display the validations, see the draft below.\\n\\n```jsx\\nimport React from 'react';\\nimport styled from 'styled-components';\\n\\nconst ValidationLayout = styled.section`\\n  .ValidationLayout__message {\\n    color: red;\\n  }\\n`;\\n\\nexport default function Validation({ validations = [] }) {\\n  return (\\n    <ValidationLayout>\\n      {validations.map(\\n        ({ key, isValid, message }) =>\\n          !isValid && (\\n            <div className=\\\"ValidationLayout__message\\\" key={key}>\\n              {message}\\n            </div>\\n          )\\n      )}\\n    </ValidationLayout>\\n  );\\n}\\n```\\n\\n### DropdownField\\n\\nHere, validations are received always and the consumer decides when to display them.\\n\\n**Note**: For this case, we are only displaying after visiting the field, but, nothing block you to pass another property `showValidation` when the form is submitted, then, it would be able to display by `{(isVisited || showValidation) && <Validation validations={validations} />}`.\\n\\n```jsx\\nimport React, { useCallback, useRef, useState } from 'react';\\nimport PropTypes from 'prop-types';\\nimport uuid from 'uuid';\\nimport styled from 'styled-components';\\nimport Validation from './Validation';\\n\\nconst DropdownFieldLayout = styled.div`\\n  padding: 0 0 10px 0;\\n  display: grid;\\n  grid-template-columns: min-content;\\n  grid-template-rows: min-content auto;\\n\\n  label {\\n    display: grid;\\n    grid-template-columns: min-content;\\n    grid-template-rows: min-content min-content min-content;\\n    white-space: nowrap;\\n    grid-gap: 10px;\\n  }\\n\\n  .DropdownFieldLayout__validations {\\n    display: block;\\n    white-space: nowrap;\\n  }\\n`;\\n\\nexport default function DropdownField({\\n  empty,\\n  formatText,\\n  formatValue,\\n  label: labelText,\\n  onChangeValue,\\n  options,\\n  validations,\\n  value,\\n}) {\\n  const id = useRef(uuid.v4());\\n  const [isVisited, setIsVisited] = useState(false);\\n  const onChange = useCallback(\\n    e => {\\n      const { value: optionValue } = e.target;\\n\\n      onChangeValue(options.find(option => formatValue(option) === optionValue) || null);\\n      if (!isVisited) {\\n        setIsVisited(true);\\n      }\\n    },\\n    [formatValue, onChangeValue, options]\\n  );\\n\\n  return (\\n    <DropdownFieldLayout>\\n      <label htmlFor={id.current}>\\n        <span>{labelText}</span>\\n        <select onChange={onChange} value={formatValue(value)}>\\n          {empty && <option value={formatValue(empty)}>{formatText(empty)}</option>}\\n          {Boolean(options && options.length) &&\\n            options.map(option => {\\n              const text = formatText(option);\\n              const optionValue = formatValue(option);\\n\\n              return <option value={optionValue}>{text}</option>;\\n            })}\\n        </select>\\n      </label>\\n      <div className=\\\"DropdownFieldLayout__validations\\\">\\n        {isVisited && <Validation validations={validations} />}\\n      </div>\\n    </DropdownFieldLayout>\\n  );\\n}\\n\\nDropdownField.propTypes = {\\n  empty: PropTypes.oneOf([PropTypes.any]),\\n  formatText: PropTypes.func.isRequired,\\n  formatValue: PropTypes.func.isRequired,\\n  label: PropTypes.string,\\n  onChangeValue: PropTypes.func.isRequired,\\n  options: PropTypes.arrayOf(PropTypes.any).isRequired,\\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\\n};\\n\\nDropdownField.defaultProps = {\\n  empty: null,\\n  label: null,\\n  validations: [],\\n  value: '',\\n};\\n```\\n\\n## Using the DropdownField\\n\\nAfter building the Dropdown, see below how to use it.\\n\\n```jsx\\nimport React from 'react';\\nimport styled from 'styled-components';\\nimport { useFormFlowItem } from 'react-form-flow';\\nimport DropdownField from './DropdownField';\\n\\nconst DropdownFieldRecipeLayout = styled.div``;\\n\\nconst countries = [\\n  { id: 'br', name: 'Brazil' },\\n  { id: 'ie', name: 'Ireland' },\\n  { id: 'it', name: 'Italy' },\\n  { id: 'sp', name: 'Spain' },\\n  { id: 'uk', name: 'United Kingdom' },\\n  { id: 'fr', name: 'France' },\\n  { id: 'us', name: 'United States' },\\n];\\nconst empty = { id: '', name: 'Select your country' };\\n\\nfunction formatValue(item) {\\n  const { id } = item || {};\\n\\n  return id;\\n}\\n\\nfunction formatText(item) {\\n  const { name } = item || {};\\n\\n  return name;\\n}\\n\\nexport default function DropdownFieldRecipe() {\\n  const nationalityField = useFormFlowItem('nationality');\\n\\n  return (\\n    <DropdownFieldRecipeLayout>\\n      <h2>Interact with dropdown below by selecting a value...</h2>\\n\\n      <DropdownField\\n        {...nationalityField}\\n        empty={empty}\\n        label=\\\"Nationality\\\"\\n        options={countries}\\n        formatValue={formatValue}\\n        formatText={formatText}\\n      />\\n      <div>\\n        {!nationalityField.value && <strong>No value selected yet.</strong>}\\n        {nationalityField.value && (\\n          <div>\\n            <strong>Value:</strong>\\n            <span>{JSON.stringify(nationalityField.value)}</span>\\n          </div>\\n        )}\\n      </div>\\n    </DropdownFieldRecipeLayout>\\n  );\\n}\\n```\\n\\nAnd then...\\n\\n```jsx\\n  import { FormFlowProvider } from 'react-form-flow';\\n\\n  const initialData = { ... };\\n  const schemaData = { ... };\\n\\n  // ...\\n\\n  <FormFlowProvider initialData={initialData} schemaData={schemaData}>\\n    <DropdownFieldRecipe />\\n  </FormFlowProvider>\\n```\\n\"","export default \"# Input Field Recipe\\n\\nThe idea here is to show how to optimise your performance by reusing a input field.\\n\\n## Code\\n\\nHere, we are using [styled-components](https://www.styled-components.com/) for prettifying styles.\\n\\n### Validation\\n\\nYou will probably need a component to display the validations, see the draft below.\\n\\n```jsx\\nimport React from 'react';\\nimport styled from 'styled-components';\\n\\nconst ValidationLayout = styled.section`\\n  .ValidationLayout__message {\\n    color: red;\\n  }\\n`;\\n\\nexport default function Validation({ validations = [] }) {\\n  return (\\n    <ValidationLayout>\\n      {validations.map(\\n        ({ key, isValid, message }) =>\\n          !isValid && (\\n            <div className=\\\"ValidationLayout__message\\\" key={key}>\\n              {message}\\n            </div>\\n          )\\n      )}\\n    </ValidationLayout>\\n  );\\n}\\n```\\n\\n### InputField\\n\\nIn the case below, validations are received always and the consumer decides when to display them.\\n\\n**Note**: For this case, we are only displaying after visiting the field, but, nothing block you to pass another property `showValidation` when the form is submitted, then, it would be able to display by `{(isVisited || showValidation) && <Validation validations={validations} />}`.\\n\\n```jsx\\nimport React, { useCallback, useRef, useState } from 'react';\\nimport PropTypes from 'prop-types';\\nimport uuid from 'uuid';\\nimport styled from 'styled-components';\\nimport Validation from './Validation';\\n\\nconst InputFieldLayout = styled.div`\\n  padding: 0 0 10px 0;\\n  label > span {\\n    display: block;\\n  }\\n  .InputFieldLayout__validations {\\n    display: block;\\n  }\\n`;\\n\\nexport default function InputField(props) {\\n  const { label: labelText, onChange, validations, value } = props;\\n  const id = useRef(uuid.v4());\\n  const [isVisited, setIsVisited] = useState(false);\\n  const onBlur = useCallback(() => {\\n    setIsVisited(true);\\n  }, []);\\n\\n  return (\\n    <InputFieldLayout>\\n      <label htmlFor={id.current}>\\n        <span>{labelText}</span>\\n        <input id={id.current} type=\\\"text\\\" onBlur={onBlur} onChange={onChange} value={value} />\\n      </label>\\n      <div className=\\\"InputFieldLayout__validations\\\">\\n        {isVisited && <Validation validations={validations} />}\\n      </div>\\n    </InputFieldLayout>\\n  );\\n}\\n\\nInputField.propTypes = {\\n  label: PropTypes.string,\\n  onChange: PropTypes.func.isRequired,\\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\\n};\\n\\nInputField.defaultProps = {\\n  label: null,\\n  validations: [],\\n  value: '',\\n};\\n```\\n\\n## Using the InputField\\n\\n```jsx\\nimport React, { useCallback, useRef, useState } from 'react';\\nimport styled from 'styled-components';\\nimport PropTypes from 'prop-types';\\nimport uuid from 'uuid';\\nimport { useFormFlowItem } from 'react-form-flow';\\nimport Validation from '../tools/helpers/components/Validation';\\n\\nconst InputFieldRecipeLayout = styled.div``;\\n\\nexport default function InputFieldRecipe() {\\n  const nameField = useFormFlowItem('name');\\n\\n  return (\\n    <InputFieldRecipeLayout>\\n      <h2>Interact with the input field by focusing and leaving the field...</h2>\\n\\n      <InputField {...nameField} label=\\\"Name\\\" />\\n      <div>{nameField.value}</div>\\n    </InputFieldRecipeLayout>\\n  );\\n}\\n```\\n\\nAnd then...\\n\\n```jsx\\n  import { FormFlowProvider } from 'react-form-flow';\\n\\n  const initialData = { ... };\\n  const schemaData = { ... };\\n\\n  // ...\\n\\n  <FormFlowProvider initialData={initialData} schemaData={schemaData}>\\n    <InputFieldRecipe />\\n  </FormFlowProvider>\\n```\\n\"","export default \"# Radio Field Recipe\\n\\nThis recipe will show how to build a group/simple radio using the `input[type=\\\"radio\\\"]` markup following the interface defined by `react-form-flow`.\\n\\n## Code\\n\\nHere, we are using [styled-components](https://www.styled-components.com/) for prettifying styles.\\n\\n### RadioField\\n\\nHere, validations are received always and the consumer decides when to display them.\\n\\n**Note**: For this case, there is no validation added. But, as all the other recipes, we cloud display the validations straightaway or through some property to control if it will be displayed. e.g. `showValidation` when the form is submitted, then, it would be able to display by `{showValidation && <Validation validations={validations} />}`.\\n\\n```jsx\\nimport React, { useCallback, useRef, useState } from 'react';\\nimport PropTypes from 'prop-types';\\nimport uuid from 'uuid';\\nimport styled from 'styled-components';\\n\\nconst RadioFieldLayout = styled.div`\\n  padding: 0 0 10px 0;\\n  display: grid;\\n  grid-template-columns: min-content;\\n  grid-template-rows: min-content auto;\\n\\n  label {\\n    display: grid;\\n    grid-template-columns: min-content min-content;\\n    grid-template-rows: auto;\\n    white-space: nowrap;\\n    grid-gap: 10px;\\n  }\\n\\n  .RadioFieldLayout__validations {\\n    display: block;\\n    white-space: nowrap;\\n  }\\n`;\\n\\nexport default function RadioField({\\n  checkedValue,\\n  name,\\n  label: labelText,\\n  onChangeValue,\\n  validations,\\n  value,\\n}) {\\n  const id = useRef(uuid.v4());\\n  const onChange = useCallback(() => {\\n    onChangeValue(checkedValue);\\n  }, [checkedValue, onChangeValue]);\\n\\n  return (\\n    <RadioFieldLayout>\\n      <label htmlFor={id.current}>\\n        <span>{labelText}</span>\\n        <input\\n          id={id.current}\\n          name={name}\\n          type=\\\"radio\\\"\\n          onChange={onChange}\\n          checked={value === checkedValue}\\n        />\\n      </label>\\n    </RadioFieldLayout>\\n  );\\n}\\n\\nRadioField.propTypes = {\\n  checkedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\\n    .isRequired,\\n  name: PropTypes.string.isRequired,\\n  label: PropTypes.string,\\n  onChangeValue: PropTypes.func.isRequired,\\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\\n};\\n\\nRadioField.defaultProps = {\\n  label: null,\\n  validations: [],\\n  value: '',\\n};\\n```\\n\\n## Using the RadioField\\n\\nAfter building the Dropdown, see below how to use it.\\n\\n```jsx\\nimport React from 'react';\\nimport styled from 'styled-components';\\nimport { useFormFlowItem } from 'react-form-flow';\\nimport RadioField from './RadioField';\\n\\nconst RadioFieldRecipeLayout = styled.div``;\\n\\nexport default function RadioFieldRecipe() {\\n  const skillsField = useFormFlowItem('skills');\\n\\n  return (\\n    <RadioFieldRecipeLayout>\\n      <h2>Interact with the radios below by clicking...</h2>\\n      <p>\\n        <strong>Note:</strong>\\n        <span>\\n          the property <strong>name</strong> is important for a radio in a form.\\n        </span>\\n      </p>\\n      <fieldset>\\n        <legend>Left/Right hand</legend>\\n        <RadioField {...handField} label=\\\"Left\\\" checkedValue=\\\"left\\\" name=\\\"hand\\\" />\\n        <RadioField {...handField} label=\\\"Right\\\" checkedValue=\\\"right\\\" name=\\\"hand\\\" />\\n        <RadioField {...handField} label=\\\"Both\\\" checkedValue=\\\"both\\\" name=\\\"hand\\\" />\\n        <span>\\n          value:\\n          {handField.value}\\n        </span>\\n      </fieldset>\\n    </RadioFieldRecipeLayout>\\n  );\\n}\\n```\\n\\nAnd then...\\n\\n```jsx\\n  import { FormFlowProvider } from 'react-form-flow';\\n\\n  const initialData = { ... };\\n  const schemaData = { ... };\\n\\n  // ...\\n\\n  <FormFlowProvider initialData={initialData} schemaData={schemaData}>\\n    <RadioFieldRecipe />\\n  </FormFlowProvider>\\n```\\n\"","export default \"# Address Book\\n\\nExample of address book form with nested fields.\\n\"","import React, { useCallback, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useFormFlowItem } from '../src';\nimport InputField from '../react-form-flow-examples/fields/InputField';\n\nconst InputFieldRecipeLayout = styled.div``;\n\nexport default function InputFieldRecipe() {\n  const nameField = useFormFlowItem('name');\n\n  return (\n    <InputFieldRecipeLayout>\n      <h2>Interact with the input field by focusing and leaving the field...</h2>\n\n      <InputField {...nameField} label=\"Name\" />\n      <div>{nameField.value}</div>\n    </InputFieldRecipeLayout>\n  );\n}\n","export default function hasValue(value) {\n  return (\n    value !== null && value !== undefined && (typeof value !== 'string' || (value && value.trim()))\n  );\n}\n","import hasValue from './hasValue';\n\nexport default function createRequiredValidation(message) {\n  return ({ data, value, path }) => {\n    const key = `${path}-required`;\n    const isValid = hasValue(value);\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n","import hasValue from './hasValue';\n\nexport default function createMinLengthValidation(min, createMessage) {\n  return args => {\n    const { data, value, path } = args;\n    const key = `${path}-min-length`;\n    const isValid = !hasValue(value) || value.length >= min;\n    const { length } = value || '';\n    const message = createMessage({ data, value, path, min, length });\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styled from 'styled-components';\nimport Validation from './Validation';\n\nconst InputFieldLayout = styled.div`\n  padding: 0 0 10px 0;\n  label > span {\n    display: block;\n  }\n  .InputFieldLayout__validations {\n    display: block;\n  }\n`;\n\nexport default function InputField({ label: labelText, onChange, validations, value }) {\n  const id = useRef(uuid.v4());\n  return (\n    <InputFieldLayout>\n      <label htmlFor={id.current}>\n        <span>{labelText}</span>\n        <input id={id.current} type=\"text\" onChange={onChange} value={value} />\n      </label>\n      <div className=\"InputFieldLayout__validations\">\n        <Validation validations={validations} />\n      </div>\n    </InputFieldLayout>\n  );\n}\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nInputField.defaultProps = {\n  label: null,\n  validations: [],\n  value: '',\n};\n","import React from 'react';\n// eslint-disable-next-line\nimport styled from 'styled-components';\nimport { FormFlowProvider, useFormFlowItem, useFormFlowValidation } from '../src';\nimport Validation from '../tools/helpers/components/Validation';\nimport InputField from '../tools/helpers/components/InputField';\n\nconst Layout = styled.div`\n  height: 100%;\n  width: 100%;\n\n  display: grid;\n\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n`;\n\nfunction Validations() {\n  const nameValidation = useFormFlowValidation('name');\n  const descriptionValidation = useFormFlowItem('description');\n\n  return (\n    <div>\n      <Validation label=\"Name\" {...nameValidation} />\n      <Validation label=\"Description\" {...descriptionValidation} />\n    </div>\n  );\n}\n\nfunction Form() {\n  const nameField = useFormFlowItem('name');\n  const descriptionField = useFormFlowItem('description');\n\n  return (\n    <div>\n      <InputField label=\"Name\" {...nameField} />\n      <InputField label=\"Description\" {...descriptionField} />\n    </div>\n  );\n}\n\nexport default ({ schemaData }) => (\n  <Layout>\n    <FormFlowProvider initialData={{}} schemaData={schemaData}>\n      <Validations />\n      <Form />\n    </FormFlowProvider>\n  </Layout>\n);\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { createValidations } from '../src';\nimport createRequiredValidation from '../tools/helpers/components/createRequiredValidation';\nimport createMinLengthValidation from '../tools/helpers/components/createMinLengthValidation';\n\nimport App from './App';\n\nexport default function AppInteractive({\n  requiredNameMessage,\n  requiredDescriptionMessage,\n  minNameLength,\n  minDescriptionLength,\n}) {\n  const schemaData = useMemo(\n    () => ({\n      name: createValidations(\n        [],\n        createRequiredValidation(requiredNameMessage),\n        createMinLengthValidation(\n          minNameLength,\n          ({ length, min }) =>\n            `Name should have more than ${min} characters. (Remaining ${\n              length > min ? 0 : min - length\n            })`\n        )\n      ),\n      description: createValidations(\n        [],\n        createRequiredValidation(requiredDescriptionMessage),\n        createMinLengthValidation(\n          minDescriptionLength,\n          ({ length, min }) =>\n            `Description should have more than ${min} characters. (Remaining ${\n              length > min ? 0 : min - length\n            })`\n        )\n      ),\n    }),\n    [requiredNameMessage, minNameLength, requiredDescriptionMessage, minDescriptionLength]\n  );\n\n  return <App schemaData={schemaData} />;\n}\n\nAppInteractive.propTypes = {\n  requiredNameMessage: PropTypes.string.isRequired,\n  requiredDescriptionMessage: PropTypes.string.isRequired,\n  minNameLength: PropTypes.number.isRequired,\n  minDescriptionLength: PropTypes.number.isRequired,\n};\n","import moment from 'moment';\nimport { createValidations } from '../../src';\nimport createRequiredValidation from '../validationRecipes/createRequiredValidation';\nimport createMaxLengthValidation from '../validationRecipes/createMaxLengthValidation';\n\nexport default {\n  name: createValidations(\n    [],\n    createRequiredValidation('Please enter your name.'),\n    createMaxLengthValidation(\n      100,\n      ({ length, max }) =>\n        `Name should not have more than ${max} characters. (${\n          length > max ? 0 : max - length\n        } characters beyond)`\n    )\n  ),\n  email: createValidations(\n    [],\n    createRequiredValidation('Please enter your email.'),\n    createMaxLengthValidation(\n      300,\n      ({ length, max }) =>\n        `Email should not have more than ${max} characters. (${\n          length > max ? 0 : max - length\n        } characters beyond)`\n    )\n  ),\n  birthday: createValidations([], createRequiredValidation('Please enter your birthday.'), args => {\n    const { data, path, value } = args;\n    const date = moment(value);\n    const now = moment();\n    const isValid = !value || (date.isValid() ? now.valueOf() > date.valueOf() : false);\n    const message = `Please enter a valid date not beyond \"${now.format(\n      'DD/MM/YYYY'\n    )}\" e.g. 21/01/2010 (DD/MM/YYYY)`;\n\n    return {\n      data,\n      isValid,\n      key: `${path}-date-invalid`,\n      message,\n      path,\n      value,\n    };\n  }),\n};\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { useFormFlowItem } from '../../src';\nimport InputField from '../fields/InputField';\n\nconst AddressBookFormLayout = styled.div``;\n\nexport default function AddressBookForm() {\n  const nameField = useFormFlowItem('name');\n  const emailField = useFormFlowItem('email');\n  const birthdayField = useFormFlowItem('birthday');\n\n  return (\n    <AddressBookFormLayout>\n      <InputField {...nameField} label=\"Name\" layout=\"grid\" />\n      <InputField {...emailField} label=\"Email\" layout=\"grid\" type=\"email\" />\n      <InputField {...birthdayField} label=\"Birthday\" layout=\"grid\" type=\"date\" />\n    </AddressBookFormLayout>\n  );\n}\n\nAddressBookForm.propTypes = {};\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport FormFlowProvider from '../../src';\nimport schemaData from './schemaData';\nimport AddressBookForm from './AddressBookForm';\n\nconst AddressBookLayout = styled.div``;\n\nexport default function AddressBook() {\n  const initialState = useRef({});\n\n  return (\n    <AddressBookLayout>\n      <FormFlowProvider initialData={initialState.current} schemaData={schemaData}>\n        <AddressBookForm />\n      </FormFlowProvider>\n    </AddressBookLayout>\n  );\n}\n\nAddressBook.propTypes = {};\n","import AddressBook from './AddressBook';\n\nexport default AddressBook;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FormFlowProvider, useFormFlowItem, useFormFlowValidation } from '../src';\nimport Validation from '../tools/helpers/components/Validation';\n\nfunction UpdateData({ data }) {\n  const { setData } = useFormFlowItem();\n\n  useEffect(() => {\n    setData(data);\n  }, [data, setData]);\n\n  return null;\n}\n\nconst ValidationsLayout = styled.div`\n  hr:last-child {\n    display: none;\n  }\n`;\n\nfunction Validations({ schemaData }) {\n  const { validations } = useFormFlowValidation();\n\n  return (\n    <ValidationsLayout>\n      {Object.keys(schemaData).map(jsonPath => (\n        <React.Fragment>\n          <Validation\n            isColored\n            key={jsonPath}\n            label={jsonPath}\n            validations={validations.filter(({ path }) => jsonPath === path)}\n          />\n          <hr />\n        </React.Fragment>\n      ))}\n    </ValidationsLayout>\n  );\n}\n\nexport default function RecipesValidations({ data, schemaData }) {\n  return (\n    <FormFlowProvider initialData={data} schemaData={schemaData}>\n      <h2>Try change the validations or the data in the console below...</h2>\n      <UpdateData data={data} />\n      <Validations schemaData={schemaData} />\n    </FormFlowProvider>\n  );\n}\n\nRecipesValidations.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  schemaData: PropTypes.shape({}).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createValidations } from '../src';\nimport RecipesValidations from './RecipesValidations';\nimport hasValue from '../react-form-flow-examples/validationRecipes/hasValue';\n\nfunction decode(text) {\n  const parser = document.createElement('div');\n\n  parser.innerHTML = text;\n  return parser.textContent;\n}\n\nfunction parse(text) {\n  return JSON.parse(decode(text));\n}\n\nexport default function RecipesValidationsInteractive({ data, factories, schemaData }) {\n  const newData = parse(data);\n  // eslint-disable-next-line\n  const getSchemaData = new Function(\n    'createValidations',\n    'hasValue',\n    `${decode(factories)} return ${decode(schemaData)};`\n  );\n\n  return (\n    <RecipesValidations data={newData} schemaData={getSchemaData(createValidations, hasValue)} />\n  );\n}\n\nRecipesValidationsInteractive.propTypes = {\n  data: PropTypes.string.isRequired,\n  factories: PropTypes.string.isRequired,\n  schemaData: PropTypes.string.isRequired,\n};\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styled from 'styled-components';\nimport Validation from './Validation';\n\nconst RadioFieldLayout = styled.div`\n  padding: 0 0 10px 0;\n  display: grid;\n  grid-template-columns: min-content;\n  grid-template-rows: min-content auto;\n\n  label {\n    display: grid;\n    grid-template-columns: min-content min-content;\n    grid-template-rows: auto;\n    white-space: nowrap;\n    grid-gap: 10px;\n  }\n\n  .RadioFieldLayout__validations {\n    display: block;\n    white-space: nowrap;\n  }\n`;\n\nexport default function RadioField({\n  checkedValue,\n  name,\n  label: labelText,\n  onChangeValue,\n  validations,\n  value,\n}) {\n  const id = useRef(uuid.v4());\n  const onChange = useCallback(() => {\n    onChangeValue(checkedValue);\n  }, [checkedValue, onChangeValue]);\n\n  return (\n    <RadioFieldLayout>\n      <label htmlFor={id.current}>\n        <span>{labelText}</span>\n        <input\n          id={id.current}\n          name={name}\n          type=\"radio\"\n          onChange={onChange}\n          checked={value === checkedValue}\n        />\n      </label>\n      <div className=\"RadioFieldLayout__validations\">\n        <Validation validations={validations} />\n      </div>\n    </RadioFieldLayout>\n  );\n}\n\nRadioField.propTypes = {\n  checkedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\n    .isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChangeValue: PropTypes.func.isRequired,\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n};\n\nRadioField.defaultProps = {\n  label: null,\n  validations: [],\n  value: '',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFormFlowItem } from '../src';\nimport RadioField from '../react-form-flow-examples/fields/Radiofield';\n\nconst RadioFieldRecipeLayout = styled.div``;\n\nexport default function RadioFieldRecipe() {\n  const handField = useFormFlowItem('hand');\n\n  return (\n    <RadioFieldRecipeLayout>\n      <h2>Interact with the checkboxes below by clicking...</h2>\n      <fieldset>\n        <legend>Left/Right hand</legend>\n        <RadioField {...handField} label=\"Left\" checkedValue=\"left\" name=\"hand\" />\n        <RadioField {...handField} label=\"Right\" checkedValue=\"right\" name=\"hand\" />\n        <RadioField {...handField} label=\"Both\" checkedValue=\"both\" name=\"hand\" />\n        <span>\n          value:\n          {handField.value}\n        </span>\n      </fieldset>\n    </RadioFieldRecipeLayout>\n  );\n}\n","export default function hasValue(value) {\n  return (\n    value !== null && value !== undefined && (typeof value !== 'string' || (value && value.trim()))\n  );\n}\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styled from 'styled-components';\nimport Validation from './Validation';\n\nconst CheckboxFieldLayout = styled.div`\n  padding: 0 0 10px 0;\n  display: grid;\n  grid-template-columns: min-content;\n  grid-template-rows: min-content auto;\n\n  label {\n    display: grid;\n    grid-template-columns: min-content min-content;\n    grid-template-rows: auto;\n    white-space: nowrap;\n    grid-gap: 10px;\n  }\n\n  .CheckboxFieldLayout__validations {\n    display: block;\n    white-space: nowrap;\n  }\n`;\n\nexport default function CheckboxField({\n  checkedValue,\n  label: labelText,\n  onChangeValue,\n  validations,\n  value,\n}) {\n  const id = useRef(uuid.v4());\n  const onChange = useCallback(() => {\n    const treatedValue = value || [];\n    const hasValue = treatedValue.includes(checkedValue);\n    const newValue = hasValue\n      ? treatedValue.filter(val => val !== checkedValue)\n      : treatedValue.concat(checkedValue);\n\n    onChangeValue(newValue);\n  }, [checkedValue, onChangeValue, value]);\n\n  return (\n    <CheckboxFieldLayout>\n      <label htmlFor={id.current}>\n        <span>{labelText}</span>\n        <input\n          id={id.current}\n          type=\"checkbox\"\n          onChange={onChange}\n          checked={(value || []).includes(checkedValue)}\n        />\n      </label>\n      <div className=\"CheckboxFieldLayout__validations\">\n        <Validation validations={validations} />\n      </div>\n    </CheckboxFieldLayout>\n  );\n}\n\nCheckboxField.propTypes = {\n  checkedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\n    .isRequired,\n  label: PropTypes.string,\n  onChangeValue: PropTypes.func.isRequired,\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.any),\n  ]),\n};\n\nCheckboxField.defaultProps = {\n  label: null,\n  validations: [],\n  value: '',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFormFlowItem } from '../src';\nimport CheckboxField from '../react-form-flow-examples/fields/CheckboxField';\n\nconst CheckboxFieldRecipeLayout = styled.div``;\n\nexport default function CheckboxFieldRecipe() {\n  const skillsField = useFormFlowItem('skills');\n\n  return (\n    <CheckboxFieldRecipeLayout>\n      <h2>Interact with the checkboxes below by clicking...</h2>\n      <fieldset>\n        <legend>Skills</legend>\n        <CheckboxField {...skillsField} label=\"Reading\" checkedValue=\"reading\" />\n        <CheckboxField {...skillsField} label=\"Strategic View\" checkedValue=\"strategic_view\" />\n        <CheckboxField {...skillsField} label=\"Cooking\" checkedValue=\"cooking\" />\n        <CheckboxField {...skillsField} label=\"Playing football\" checkedValue=\"football\" />\n        <span>\n          value:\n          {JSON.stringify(skillsField.value)}\n        </span>\n      </fieldset>\n    </CheckboxFieldRecipeLayout>\n  );\n}\n","import React, { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styled from 'styled-components';\nimport Validation from './Validation';\n\nconst DropdownFieldLayout = styled.div`\n  padding: 0 0 10px 0;\n  display: grid;\n  grid-template-columns: min-content;\n  grid-template-rows: min-content auto;\n\n  label {\n    display: grid;\n    grid-template-columns: min-content;\n    grid-template-rows: min-content min-content min-content;\n    white-space: nowrap;\n    grid-gap: 10px;\n  }\n\n  .DropdownFieldLayout__validations {\n    display: block;\n    white-space: nowrap;\n  }\n`;\n\nexport default function DropdownField({\n  empty,\n  formatText,\n  formatValue,\n  label: labelText,\n  onChangeValue,\n  options,\n  validations,\n  value,\n}) {\n  const id = useRef(uuid.v4());\n  const onChange = useCallback(\n    e => {\n      const { value: optionValue } = e.target;\n\n      onChangeValue(options.find(option => formatValue(option) === optionValue) || null);\n    },\n    [formatValue, onChangeValue, options]\n  );\n\n  return (\n    <DropdownFieldLayout>\n      <label htmlFor={id.current}>\n        <span>{labelText}</span>\n        <select onChange={onChange} value={formatValue(value)}>\n          {empty && <option value={formatValue(empty)}>{formatText(empty)}</option>}\n          {Boolean(options && options.length) &&\n            options.map(option => {\n              const text = formatText(option);\n              const optionValue = formatValue(option);\n\n              return (\n                <option key={optionValue} value={optionValue}>\n                  {text}\n                </option>\n              );\n            })}\n        </select>\n      </label>\n      <div className=\"DropdownFieldLayout__validations\">\n        <Validation validations={validations} />\n      </div>\n    </DropdownFieldLayout>\n  );\n}\n\nDropdownField.propTypes = {\n  empty: PropTypes.oneOf([PropTypes.any]),\n  formatText: PropTypes.func.isRequired,\n  formatValue: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  onChangeValue: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.any).isRequired,\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n};\n\nDropdownField.defaultProps = {\n  empty: null,\n  label: null,\n  validations: [],\n  value: '',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFormFlowItem } from '../src';\nimport DropdownField from '../react-form-flow-examples/fields/DropdownField';\n\nconst DropdownFieldRecipeLayout = styled.div``;\n\nconst countries = [\n  { id: 'br', name: 'Brazil' },\n  { id: 'ie', name: 'Ireland' },\n  { id: 'it', name: 'Italy' },\n  { id: 'sp', name: 'Spain' },\n  { id: 'uk', name: 'United Kingdom' },\n  { id: 'fr', name: 'France' },\n  { id: 'us', name: 'United States' },\n];\nconst empty = { id: '', name: 'Select your country' };\n\nfunction formatValue(item) {\n  const { id } = item || {};\n\n  return id;\n}\n\nfunction formatText(item) {\n  const { name } = item || {};\n\n  return name;\n}\n\nexport default function DropdownFieldRecipe() {\n  const nationalityField = useFormFlowItem('nationality');\n\n  return (\n    <DropdownFieldRecipeLayout>\n      <h2>Interact with dropdown below by selecting a value...</h2>\n\n      <DropdownField\n        {...nationalityField}\n        empty={empty}\n        label=\"Nationality\"\n        options={countries}\n        formatValue={formatValue}\n        formatText={formatText}\n      />\n      <div>\n        {!nationalityField.value && <strong>No value selected yet.</strong>}\n        {nationalityField.value && (\n          <div>\n            <strong>Value:</strong>\n            <span>{JSON.stringify(nationalityField.value)}</span>\n          </div>\n        )}\n      </div>\n    </DropdownFieldRecipeLayout>\n  );\n}\n","import React from 'react';\n\nexport default React.createContext([null, null]);\n","import React from 'react';\n\nexport default React.createContext([{}, {}]);\n","import { get } from 'mutation-helper';\n\nexport function clearIndexes(path) {\n  return path.replace(/\\[\\d+\\]/g, '[]');\n}\n\nfunction add(list, item) {\n  if (!list.includes(item)) {\n    list.push(item);\n  }\n}\n\nfunction derivatePaths(paths, data, prefix, remainingPaths) {\n  if (remainingPaths.length === 0) {\n    add(paths, prefix);\n  }\n\n  const list = get(data, prefix);\n  const suffix = remainingPaths.pop();\n\n  if (list && list.forEach) {\n    list.forEach((_, idx) => {\n      derivatePaths(paths, data, `${prefix}[${idx}]${suffix}`, remainingPaths.slice());\n    });\n  }\n}\n\nexport function interpolatePaths(schemaData, data) {\n  const rawValidationPaths = Object.keys(schemaData);\n  const paths = [];\n\n  rawValidationPaths.forEach(jsonPath => {\n    const rawJsonPath = clearIndexes(jsonPath);\n    const nestedPaths = rawJsonPath\n      .split('[]')\n      .map(value => value.trim())\n      .reverse();\n    const parentPath = nestedPaths.pop();\n\n    if (parentPath) {\n      add(paths, parentPath);\n    }\n\n    if (nestedPaths.length > 0) {\n      derivatePaths(paths, data, parentPath, nestedPaths);\n    }\n  });\n\n  return paths;\n}\n\nexport function createValidations(invalidationPaths, ...validations) {\n  function validate(args) {\n    return validations.map(checkValidation => checkValidation(args));\n  }\n\n  return {\n    invalidationPaths,\n    validate,\n  };\n}\n","import { useContext, useCallback, useMemo, useRef } from 'react';\nimport { get } from 'mutation-helper';\nimport FormFlowDataContext from './FormFlowDataContext';\nimport FormFlowValidationContext from './FormFlowValidationContext';\nimport { clearIndexes } from './validationUtils';\nimport hasChanged from './hasChanged';\nimport hasPathMatched from './hasPathMatched';\n\n/**\n * Perform validation over the form data based on the path provided\n */\nexport default function useFormFlowValidation(path = '') {\n  const [data] = useContext(FormFlowDataContext);\n  const [schemaData, cache] = useContext(FormFlowValidationContext);\n  const { allValidations, byPath } = cache;\n  const localCacheRef = useRef({ previousValues: [], validations: [] });\n  const isAllValid = useCallback(\n    paths => {\n      const allPaths = paths || [];\n      const isAllRequired = allPaths.length === 0;\n\n      if (isAllRequired) {\n        return !allValidations.some(({ isValid }) => !isValid);\n      }\n\n      return !allValidations.some(\n        ({ isValid, path: validationPath }) =>\n          !isValid && allPaths.some(internalPath => hasPathMatched(validationPath, internalPath))\n      );\n    },\n    [allValidations]\n  );\n  const validate = useCallback(\n    dataToValidate => {\n      if (path.includes('[]')) {\n        return allValidations.filter(({ path: jsonPath }) => path === clearIndexes(jsonPath));\n      }\n\n      const validationRules = schemaData[path] || schemaData[clearIndexes(path)];\n\n      if (!validationRules) {\n        return [];\n      }\n      const indexesMatches = path.match(/(\\[\\d+\\])/g);\n      const indexes = indexesMatches ? indexesMatches.slice() : [];\n      const value = get(dataToValidate, path);\n      const values = validationRules.invalidationPaths.map(invalidationPath =>\n        get(\n          dataToValidate,\n          indexes.reduce(\n            (finalPath, indexValue, index) => finalPath.replace(`[\\$${index}]`, indexValue),\n            invalidationPath\n          )\n        )\n      );\n      values.push(value);\n\n      const hasBeenInvalidatedByDependencies = hasChanged(\n        values,\n        localCacheRef.current.previousValues\n      );\n\n      if (hasBeenInvalidatedByDependencies) {\n        localCacheRef.current.validations = validationRules.validate({\n          data: dataToValidate,\n          get,\n          path,\n          value,\n        });\n        localCacheRef.current.validations.forEach(validation => allValidations.push(validation));\n      }\n\n      return localCacheRef.current.validations;\n    },\n    [path, schemaData, allValidations]\n  );\n  const validations = useMemo(() => {\n    if (!path) {\n      return allValidations;\n    }\n\n    if (byPath[path]) {\n      return byPath[path];\n    }\n\n    return validate(data, path);\n  }, [data, allValidations, byPath, path, validate]);\n\n  if (path) {\n    byPath[path] = validations;\n  }\n\n  return {\n    cache,\n    data,\n    isAllValid,\n    validations,\n  };\n}\n","import { clearIndexes } from './validationUtils';\n\n/**\n * Checks if a validated path matches a given path\n * @param {string} validationPath the validated path\n * @param {string} path the path to compare against\n * @returns {boolean}\n */\nexport default function hasPathMatched(validationPath, path) {\n  return !path || path === validationPath || path === clearIndexes(validationPath);\n}\n","/**\n * Identifies if any of the values in the arrays has changed\n * @param {array} currentValues the current list of values to be compared\n * @param {array} previousValues the previous list of values to be compared\n * @returns {boolean}\n */\nexport default function hasChanged(currentValues, previousValues) {\n  return (\n    previousValues.filter((value, idx) => value === currentValues[idx]).length !==\n    currentValues.length\n  );\n}\n","import PropTypes from 'prop-types';\n\n// eslint-disable-next-line\nexport const SchemaDataShape = PropTypes.shape({\n  /**\n   * List of paths that invalidates cache for validation\n   */\n  invalidationPaths: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Validation function which returns a list of validations\n   */\n  validate: PropTypes.func,\n});\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FormFlowDataContext from './FormFlowDataContext';\nimport FormFlowValidationContext from './FormFlowValidationContext';\nimport useFormFlowValidation from './useFormFlowValidation';\nimport { interpolatePaths } from './validationUtils';\nimport { SchemaDataShape } from './shapes';\n\nfunction Validate({ path }) {\n  useFormFlowValidation(path);\n\n  return null;\n}\n\nValidate.propTypes = {\n  /**\n   * JsonPath to validate in the form\n   */\n  path: PropTypes.string.isRequired,\n};\n\nexport default function FormFlowProvider({ children, initialData, schemaData }) {\n  const dataState = useState(initialData);\n  const [data] = dataState;\n  const validationState = useMemo(() => [schemaData, {}], [schemaData]);\n  const allPaths = useMemo(() => interpolatePaths(schemaData, data), [schemaData, data]);\n\n  /**\n   * Basically, we need to clear out the pre-existing validation as it can only\n   * be trigger by data or schemaData changes which would invalidate the form validations.\n   */\n  validationState[1].allPaths = allPaths;\n  validationState[1].allValidations = [];\n  validationState[1].byPath = {};\n\n  return (\n    <FormFlowDataContext.Provider value={dataState}>\n      <FormFlowValidationContext.Provider value={validationState}>\n        {allPaths.map(path => (\n          <Validate key={path} path={path} />\n        ))}\n        {children}\n      </FormFlowValidationContext.Provider>\n    </FormFlowDataContext.Provider>\n  );\n}\n\nFormFlowProvider.propTypes = {\n  /**\n   * React.Node where the form fields are rendered\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The initial form data\n   */\n  initialData: PropTypes.shape({}).isRequired,\n  /**\n   * The object with validation rules per field\n   */\n  schemaData: PropTypes.objectOf(SchemaDataShape).isRequired,\n};\n","import { useCallback, useMemo } from 'react';\nimport { get } from 'mutation-helper';\nimport useFormFlow from './useFormFlow';\nimport useFormFlowValidation from './useFormFlowValidation';\n\n/**\n * Obtains values and validation from a form based on a json path\n * @param {string} path the json path to get and set value as well as validate it\n * @returns {React.Context}\n */\nexport default function useFormFlowItem(path) {\n  const { data, onChangeByPath, setData } = useFormFlow();\n  const onChangeValue = useCallback(\n    value => {\n      onChangeByPath(path, value);\n    },\n    [path, onChangeByPath]\n  );\n  const onChange = useCallback(\n    e => {\n      onChangeByPath(path, e.target.value);\n    },\n    [path, onChangeByPath]\n  );\n  const value = useMemo(() => (path ? get(data, path) : data), [data, path]);\n  const { validations } = useFormFlowValidation(path);\n\n  return {\n    data,\n    onChangeValue,\n    onChange,\n    setData,\n    validations,\n    value,\n  };\n}\n","import { useContext, useCallback } from 'react';\nimport { set } from 'mutation-helper';\nimport FormFlowDataContext from './FormFlowDataContext';\n\n/**\n * Creates a memoized Provider component to be used as form\n * @returns {React.Context}\n */\nexport default function useFormFlow() {\n  const [data, setData] = useContext(FormFlowDataContext);\n  // const dataRef = useRef(data);\n  // useEffect(() => {\n  //   dataRef.current = data;\n  // }, [data]);\n  const onChangeByPath = useCallback(\n    (path, value) => {\n      setData(oldData => {\n        const newData = set(oldData, path, value);\n\n        return newData;\n      });\n      // dataRef.current = set(dataRef.current, path, value);\n      // setData(dataRef.current);\n    },\n    [setData]\n  );\n\n  return {\n    data,\n    onChangeByPath,\n    setData,\n  };\n}\n","import FormFlowProvider from './FormFlowProvider';\nimport useFormFlowItem from './useFormFlowItem';\nimport useFormFlowValidation from './useFormFlowValidation';\nimport { createValidations } from './validationUtils';\n\nexport { FormFlowProvider };\nexport { useFormFlowItem };\nexport { useFormFlowValidation };\nexport { createValidations };\n\nexport default FormFlowProvider;\n","import { addDecorator, addParameters, configure } from '@storybook/react';\nimport { themes } from '@storybook/theming';\nimport { withConsole, setConsoleOptions } from '@storybook/addon-console';\n\naddDecorator((storyFn, context) => withConsole()(storyFn)(context));\n\nsetConsoleOptions({\n  panelExclude: [],\n});\n\n// Option defaults.\naddParameters({\n  options: {\n    theme: themes.light,\n  },\n});\n\nfunction loadStories() {\n  require('../stories/index');\n}\n\nconfigure(loadStories, module);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LabelFeedback = styled.div`\n  color: ${({ isColored, isValid }) => (isColored ? (isValid ? 'green' : 'red') : 'black')};\n`;\n\nconst ValidationLayout = styled.section`\n  .ValidationLayout__message {\n    color: red;\n  }\n`;\n\nexport default function Validation({ isColored = false, label, validations = [] }) {\n  return (\n    <ValidationLayout>\n      {!!label && (\n        <LabelFeedback isColored={isColored} isValid={!validations.some(({ isValid }) => !isValid)}>\n          {label}\n        </LabelFeedback>\n      )}\n      {validations.map(\n        ({ key, isValid, message }) =>\n          !isValid && (\n            <div className=\"ValidationLayout__message\" key={key}>\n              {message}\n            </div>\n          )\n      )}\n    </ValidationLayout>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LabelFeedback = styled.div`\n  color: ${({ isColored, isValid }) => (isColored ? (isValid ? 'green' : 'red') : 'black')};\n`;\n\nconst ValidationLayout = styled.section`\n  .ValidationLayout__message {\n    color: red;\n  }\n`;\n\nexport default function Validation({ isColored = false, label, validations = [] }) {\n  return (\n    <ValidationLayout>\n      {!!label && (\n        <LabelFeedback isColored={isColored} isValid={!validations.some(({ isValid }) => !isValid)}>\n          {label}\n        </LabelFeedback>\n      )}\n      {validations.map(\n        ({ key, isValid, message }) =>\n          !isValid && (\n            <div className=\"ValidationLayout__message\" key={key}>\n              {message}\n            </div>\n          )\n      )}\n    </ValidationLayout>\n  );\n}\n","import hasValue from './hasValue';\n\nexport default function createRequiredValidation(message) {\n  return ({ data, value, path }) => {\n    const key = `${path}-required`;\n    const isValid = hasValue(value);\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n","import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { withKnobs, text, number } from '@storybook/addon-knobs';\nimport withLayout from './withLayout';\nimport getingStated from '../markdown/GETTING_STARTED.md';\nimport recipesValidations from '../markdown/RECIPES_VALIDATIONS.md';\nimport checkboxField from '../markdown/RECIPES_CHECKBOX.md';\nimport dropdownField from '../markdown/RECIPES_DROPDOWN.md';\nimport inputField from '../markdown/RECIPES_INPUT.md';\nimport radioField from '../markdown/RECIPES_RADIO.md';\nimport addressBook from '../react-form-flow-examples/AddressBook/ADDRESS_BOOK.md';\n\nimport AppInteractive from './AppInteractive';\nimport RecipesValidationsInteractive from './RecipesValidationsInteractive';\nimport FormFields from './FormFields';\nimport CheckboxFieldRecipe from './CheckboxFieldRecipe';\nimport DropdownFieldRecipe from './DropdownFieldRecipe';\nimport InputFieldRecipe from './InputFieldRecipe';\nimport RadioFieldRecipe from './RadioFieldRecipe';\nimport AddressBook from '../react-form-flow-examples/AddressBook';\n\nstoriesOf('Form', module)\n  .addDecorator(withKnobs)\n  .addDecorator(withLayout)\n  .add(\n    'Basic Form Flow',\n    () => {\n      const requiredNameMessage = text('Enter required message for name', 'Name is required!');\n      const minNameLength = number('Enter the min lenth for name', 5);\n      const requiredDescriptionMessage = text(\n        'Enter required message for description',\n        'Description is required!'\n      );\n      const minDescriptionLength = number('Enter the min lenth for description', 300);\n\n      return (\n        <AppInteractive\n          minDescriptionLength={minDescriptionLength}\n          minNameLength={minNameLength}\n          requiredDescriptionMessage={requiredDescriptionMessage}\n          requiredNameMessage={requiredNameMessage}\n        />\n      );\n    },\n    {\n      notes: { markdown: getingStated },\n    }\n  )\n  .add(\n    'Advanced Form Flow',\n    () => {\n      return <AddressBook />;\n    },\n    {\n      notes: { markdown: addressBook },\n    }\n  );\n\nstoriesOf('Recipes', module)\n  .addDecorator(withKnobs)\n  .addDecorator(withLayout)\n  .add(\n    'Factoring validations',\n    () => {\n      const data = text(\n        'Data',\n        `{\n  \"name\": \"\",\n  \"description\": \"\",\n  \"passport\": {\n    \"visa\": {\n      \"value\": 3,\n      \"unit\": \"days\"\n    }\n  }\n}`\n      );\n      const schemaData = text(\n        'Schema',\n        `{\n  name: createValidations(\n    [],\n    createRequiredValidation('Name is required.')\n  ),\n  description: createValidations(\n    [],\n    createRequiredValidation('Description is required.')\n  )\n}`\n      );\n      const factories = text(\n        'Factories',\n        `/* Put your factory functions here in order to use in the schemaData */\n\n/* Example */\nfunction createRequiredValidation(message) {\n  return ({ data, value, path }) => {\n    const key = \\`\\${path}-required\\`;\n    const isValid = hasValue(value);\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n/* End: Example */\n`\n      );\n\n      return (\n        <RecipesValidationsInteractive data={data} factories={factories} schemaData={schemaData} />\n      );\n    },\n    {\n      notes: { markdown: recipesValidations },\n    }\n  )\n  .add(\n    'Checkbox Field Recipe',\n    () => (\n      <FormFields>\n        <CheckboxFieldRecipe />\n      </FormFields>\n    ),\n    {\n      notes: { markdown: checkboxField },\n    }\n  )\n  .add(\n    'Dropdown Field Recipe',\n    () => (\n      <FormFields>\n        <DropdownFieldRecipe />\n      </FormFields>\n    ),\n    {\n      notes: { markdown: dropdownField },\n    }\n  )\n  .add(\n    'Input Field Recipe',\n    () => (\n      <FormFields>\n        <InputFieldRecipe />\n      </FormFields>\n    ),\n    {\n      notes: { markdown: inputField },\n    }\n  )\n  .add(\n    'Radio Field Recipe',\n    () => (\n      <FormFields>\n        <RadioFieldRecipe />\n      </FormFields>\n    ),\n    {\n      notes: { markdown: radioField },\n    }\n  );\n","var map = {\n\t\"./af\": 267,\n\t\"./af.js\": 267,\n\t\"./ar\": 268,\n\t\"./ar-dz\": 269,\n\t\"./ar-dz.js\": 269,\n\t\"./ar-kw\": 270,\n\t\"./ar-kw.js\": 270,\n\t\"./ar-ly\": 271,\n\t\"./ar-ly.js\": 271,\n\t\"./ar-ma\": 272,\n\t\"./ar-ma.js\": 272,\n\t\"./ar-sa\": 273,\n\t\"./ar-sa.js\": 273,\n\t\"./ar-tn\": 274,\n\t\"./ar-tn.js\": 274,\n\t\"./ar.js\": 268,\n\t\"./az\": 275,\n\t\"./az.js\": 275,\n\t\"./be\": 276,\n\t\"./be.js\": 276,\n\t\"./bg\": 277,\n\t\"./bg.js\": 277,\n\t\"./bm\": 278,\n\t\"./bm.js\": 278,\n\t\"./bn\": 279,\n\t\"./bn.js\": 279,\n\t\"./bo\": 280,\n\t\"./bo.js\": 280,\n\t\"./br\": 281,\n\t\"./br.js\": 281,\n\t\"./bs\": 282,\n\t\"./bs.js\": 282,\n\t\"./ca\": 283,\n\t\"./ca.js\": 283,\n\t\"./cs\": 284,\n\t\"./cs.js\": 284,\n\t\"./cv\": 285,\n\t\"./cv.js\": 285,\n\t\"./cy\": 286,\n\t\"./cy.js\": 286,\n\t\"./da\": 287,\n\t\"./da.js\": 287,\n\t\"./de\": 288,\n\t\"./de-at\": 289,\n\t\"./de-at.js\": 289,\n\t\"./de-ch\": 290,\n\t\"./de-ch.js\": 290,\n\t\"./de.js\": 288,\n\t\"./dv\": 291,\n\t\"./dv.js\": 291,\n\t\"./el\": 292,\n\t\"./el.js\": 292,\n\t\"./en-SG\": 293,\n\t\"./en-SG.js\": 293,\n\t\"./en-au\": 294,\n\t\"./en-au.js\": 294,\n\t\"./en-ca\": 295,\n\t\"./en-ca.js\": 295,\n\t\"./en-gb\": 296,\n\t\"./en-gb.js\": 296,\n\t\"./en-ie\": 297,\n\t\"./en-ie.js\": 297,\n\t\"./en-il\": 298,\n\t\"./en-il.js\": 298,\n\t\"./en-nz\": 299,\n\t\"./en-nz.js\": 299,\n\t\"./eo\": 300,\n\t\"./eo.js\": 300,\n\t\"./es\": 301,\n\t\"./es-do\": 302,\n\t\"./es-do.js\": 302,\n\t\"./es-us\": 303,\n\t\"./es-us.js\": 303,\n\t\"./es.js\": 301,\n\t\"./et\": 304,\n\t\"./et.js\": 304,\n\t\"./eu\": 305,\n\t\"./eu.js\": 305,\n\t\"./fa\": 306,\n\t\"./fa.js\": 306,\n\t\"./fi\": 307,\n\t\"./fi.js\": 307,\n\t\"./fo\": 308,\n\t\"./fo.js\": 308,\n\t\"./fr\": 309,\n\t\"./fr-ca\": 310,\n\t\"./fr-ca.js\": 310,\n\t\"./fr-ch\": 311,\n\t\"./fr-ch.js\": 311,\n\t\"./fr.js\": 309,\n\t\"./fy\": 312,\n\t\"./fy.js\": 312,\n\t\"./ga\": 313,\n\t\"./ga.js\": 313,\n\t\"./gd\": 314,\n\t\"./gd.js\": 314,\n\t\"./gl\": 315,\n\t\"./gl.js\": 315,\n\t\"./gom-latn\": 316,\n\t\"./gom-latn.js\": 316,\n\t\"./gu\": 317,\n\t\"./gu.js\": 317,\n\t\"./he\": 318,\n\t\"./he.js\": 318,\n\t\"./hi\": 319,\n\t\"./hi.js\": 319,\n\t\"./hr\": 320,\n\t\"./hr.js\": 320,\n\t\"./hu\": 321,\n\t\"./hu.js\": 321,\n\t\"./hy-am\": 322,\n\t\"./hy-am.js\": 322,\n\t\"./id\": 323,\n\t\"./id.js\": 323,\n\t\"./is\": 324,\n\t\"./is.js\": 324,\n\t\"./it\": 325,\n\t\"./it-ch\": 326,\n\t\"./it-ch.js\": 326,\n\t\"./it.js\": 325,\n\t\"./ja\": 327,\n\t\"./ja.js\": 327,\n\t\"./jv\": 328,\n\t\"./jv.js\": 328,\n\t\"./ka\": 329,\n\t\"./ka.js\": 329,\n\t\"./kk\": 330,\n\t\"./kk.js\": 330,\n\t\"./km\": 331,\n\t\"./km.js\": 331,\n\t\"./kn\": 332,\n\t\"./kn.js\": 332,\n\t\"./ko\": 333,\n\t\"./ko.js\": 333,\n\t\"./ku\": 334,\n\t\"./ku.js\": 334,\n\t\"./ky\": 335,\n\t\"./ky.js\": 335,\n\t\"./lb\": 336,\n\t\"./lb.js\": 336,\n\t\"./lo\": 337,\n\t\"./lo.js\": 337,\n\t\"./lt\": 338,\n\t\"./lt.js\": 338,\n\t\"./lv\": 339,\n\t\"./lv.js\": 339,\n\t\"./me\": 340,\n\t\"./me.js\": 340,\n\t\"./mi\": 341,\n\t\"./mi.js\": 341,\n\t\"./mk\": 342,\n\t\"./mk.js\": 342,\n\t\"./ml\": 343,\n\t\"./ml.js\": 343,\n\t\"./mn\": 344,\n\t\"./mn.js\": 344,\n\t\"./mr\": 345,\n\t\"./mr.js\": 345,\n\t\"./ms\": 346,\n\t\"./ms-my\": 347,\n\t\"./ms-my.js\": 347,\n\t\"./ms.js\": 346,\n\t\"./mt\": 348,\n\t\"./mt.js\": 348,\n\t\"./my\": 349,\n\t\"./my.js\": 349,\n\t\"./nb\": 350,\n\t\"./nb.js\": 350,\n\t\"./ne\": 351,\n\t\"./ne.js\": 351,\n\t\"./nl\": 352,\n\t\"./nl-be\": 353,\n\t\"./nl-be.js\": 353,\n\t\"./nl.js\": 352,\n\t\"./nn\": 354,\n\t\"./nn.js\": 354,\n\t\"./pa-in\": 355,\n\t\"./pa-in.js\": 355,\n\t\"./pl\": 356,\n\t\"./pl.js\": 356,\n\t\"./pt\": 357,\n\t\"./pt-br\": 358,\n\t\"./pt-br.js\": 358,\n\t\"./pt.js\": 357,\n\t\"./ro\": 359,\n\t\"./ro.js\": 359,\n\t\"./ru\": 360,\n\t\"./ru.js\": 360,\n\t\"./sd\": 361,\n\t\"./sd.js\": 361,\n\t\"./se\": 362,\n\t\"./se.js\": 362,\n\t\"./si\": 363,\n\t\"./si.js\": 363,\n\t\"./sk\": 364,\n\t\"./sk.js\": 364,\n\t\"./sl\": 365,\n\t\"./sl.js\": 365,\n\t\"./sq\": 366,\n\t\"./sq.js\": 366,\n\t\"./sr\": 367,\n\t\"./sr-cyrl\": 368,\n\t\"./sr-cyrl.js\": 368,\n\t\"./sr.js\": 367,\n\t\"./ss\": 369,\n\t\"./ss.js\": 369,\n\t\"./sv\": 370,\n\t\"./sv.js\": 370,\n\t\"./sw\": 371,\n\t\"./sw.js\": 371,\n\t\"./ta\": 372,\n\t\"./ta.js\": 372,\n\t\"./te\": 373,\n\t\"./te.js\": 373,\n\t\"./tet\": 374,\n\t\"./tet.js\": 374,\n\t\"./tg\": 375,\n\t\"./tg.js\": 375,\n\t\"./th\": 376,\n\t\"./th.js\": 376,\n\t\"./tl-ph\": 377,\n\t\"./tl-ph.js\": 377,\n\t\"./tlh\": 378,\n\t\"./tlh.js\": 378,\n\t\"./tr\": 379,\n\t\"./tr.js\": 379,\n\t\"./tzl\": 380,\n\t\"./tzl.js\": 380,\n\t\"./tzm\": 381,\n\t\"./tzm-latn\": 382,\n\t\"./tzm-latn.js\": 382,\n\t\"./tzm.js\": 381,\n\t\"./ug-cn\": 383,\n\t\"./ug-cn.js\": 383,\n\t\"./uk\": 384,\n\t\"./uk.js\": 384,\n\t\"./ur\": 385,\n\t\"./ur.js\": 385,\n\t\"./uz\": 386,\n\t\"./uz-latn\": 387,\n\t\"./uz-latn.js\": 387,\n\t\"./uz.js\": 386,\n\t\"./vi\": 388,\n\t\"./vi.js\": 388,\n\t\"./x-pseudo\": 389,\n\t\"./x-pseudo.js\": 389,\n\t\"./yo\": 390,\n\t\"./yo.js\": 390,\n\t\"./zh-cn\": 391,\n\t\"./zh-cn.js\": 391,\n\t\"./zh-hk\": 392,\n\t\"./zh-hk.js\": 392,\n\t\"./zh-tw\": 393,\n\t\"./zh-tw.js\": 393\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 724;","import React, { useCallback, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styled from 'styled-components';\nimport Validation from './Validation';\n\nconst InputFieldLayout = styled.div`\n  padding: 0 0 10px 0;\n\n  display: ${({ layout }) => layout};\n  grid-template-rows: auto;\n  grid-template-columns: min-content minmax(1px, 100%);\n  grid-column-gap: 10px;\n\n  label > span {\n    display: block;\n  }\n  .InputFieldLayout__validations {\n    display: ${({ layout }) => layout};\n    align-items: end;\n  }\n`;\n\nexport default function InputField(props) {\n  const { label: labelText, layout, onChange, type, validations, value } = props;\n  const id = useRef(uuid.v4());\n  const [isVisited, setIsVisited] = useState(false);\n  const onBlur = useCallback(() => {\n    setIsVisited(true);\n  }, []);\n\n  return (\n    <InputFieldLayout layout={layout}>\n      <label htmlFor={id.current}>\n        <span>{labelText}</span>\n        <input id={id.current} type={type} onBlur={onBlur} onChange={onChange} value={value} />\n      </label>\n      <div className=\"InputFieldLayout__validations\">\n        {isVisited && <Validation validations={validations} />}\n      </div>\n    </InputFieldLayout>\n  );\n}\n\nInputField.Layout = InputFieldLayout;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  layout: PropTypes.oneOf(['block', 'grid']),\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  validations: PropTypes.arrayOf(PropTypes.shape({})),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nInputField.defaultProps = {\n  label: null,\n  layout: 'block',\n  type: 'text',\n  validations: [],\n  value: '',\n};\n","import hasValue from './hasValue';\n\nexport default function createMaxLengthValidation(max, createMessage) {\n  return args => {\n    const { data, value, path } = args;\n    const key = `${path}-max-length`;\n    const isValid = !hasValue(value) || value.length <= max;\n    const { length } = value || '';\n    const message = createMessage({ data, value, path, max, length });\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n","import hasValue from './hasValue';\n\nexport default function createRequiredListValidation(message) {\n  return ({ data, value, path }) => {\n    const key = `${path}-required`;\n    const isValid = hasValue(value) && value.length > 0;\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FormFlowProvider, createValidations } from '../src';\nimport createRequiredValidation from '../react-form-flow-examples/validationRecipes/createRequiredValidation';\nimport createMinLengthValidation from '../react-form-flow-examples/validationRecipes/createMinLengthValidation';\nimport createMaxLengthValidation from '../react-form-flow-examples/validationRecipes/createMaxLengthValidation';\nimport createRequiredListValidation from '../react-form-flow-examples/validationRecipes/createRequiredListValidation';\n\nconst schemaData = {\n  name: createValidations(\n    [],\n    createRequiredValidation('Name is required!'),\n    createMinLengthValidation(\n      5,\n      ({ length, min }) =>\n        `Name should have more than ${min} characters. (Remaining ${\n          length > min ? 0 : min - length\n        })`\n    )\n  ),\n  description: createValidations(\n    [],\n    createRequiredValidation('Description is required!'),\n    createMaxLengthValidation(\n      300,\n      ({ length, max }) =>\n        `Description should have less than ${max} characters. (Beyond ${\n          length > max ? max - length : 0\n        })`\n    )\n  ),\n  skills: createValidations([], createRequiredListValidation('Selected at least one skill.')),\n  hobbies: createValidations([], createRequiredListValidation('Selected at least one hobby.')),\n};\n\nconst RecipesFieldsLayout = styled.div``;\n\nexport default function FormFields(props) {\n  const { children } = props;\n  const initialData = {\n    name: '',\n    description: '',\n    skills: [],\n    hobbies: [],\n    gender: {\n      visa: {\n        value: 3,\n        unit: 'days',\n      },\n    },\n  };\n\n  return (\n    <RecipesFieldsLayout>\n      <FormFlowProvider initialData={initialData} schemaData={schemaData}>\n        {children}\n      </FormFlowProvider>\n    </RecipesFieldsLayout>\n  );\n}\n\nFormFields.propTypes = {\n  children: PropTypes.node.isRequired,\n  data: PropTypes.shape({}).isRequired,\n};\n","import hasValue from './hasValue';\n\nexport default function createMinLengthValidation(min, createMessage) {\n  return args => {\n    const { data, value, path } = args;\n    const key = `${path}-min-length`;\n    const isValid = !hasValue(value) || value.length >= min;\n    const { length } = value || '';\n    const message = createMessage({ data, value, path, min, length });\n\n    return { data, value, path, key, isValid, message };\n  };\n}\n"],"sourceRoot":""}